

APB1   42m
APB2   84m

TIMx clk = APBx *2

中断优先级：

第0组：所有4位用于指定响应优先级；
第1组：最高1位用于指定抢占式优先级，最低3位用于指定响应优先级；
第2组：最高2位用于指定抢占式优先级，最低2位用于指定响应优先级；
第3组：最高3位用于指定抢占式优先级，最低1位用于指定响应优先级；
第4组：所有4位用于指定抢占式优先级。
|先抢占，再响应|
1）如果指定的抢占式优先级别或响应优先级别超出了选定的优先级分组所限定的范围，将可能得到意想不到的结果；
2）抢占式优先级别相同的中断源之间没有嵌套关系；
3）如果某个中断源被指定为某个抢占式优先级别，又没有其它中断源处于同一个抢占式优先级别，则可以为这个中断源指定任意有效的响应优先级别。




wz_acc_mms2 = (wz_acc/4096.0f) *10000 + hc_acc_i;

hc_acc_i += 0.4f *T *( (wz_speed - wz_speed_old)/T - wz_acc_mms2 );


wz_acc_mms2 = (wz_acc/4096.0f) *10000 + (hc_acc_lpf - wz_acc_mms2);

hc_acc_lpf += 0.4f *T *( (wz_speed - wz_speed_old)/T - hc_acc_lpf );

把hc_acc_i代成(hc_acc_lpf - wz_acc_mms2)，然后后边等效，就有了。
注意wz_speed里边包含hc_acc_i的积分，两次wz_speed做差后，又得到hc_acc_i单次的值。